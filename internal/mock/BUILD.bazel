# gazelle:ignore

load("@bazel_gomock//:gomock.bzl", "gomock")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

gomock(
    name = "blobstore",
    out = "blobstore.go",
    interfaces = ["BlobAccess"],
    library = "@com_github_buildbarn_bb_storage//pkg/blobstore:go_default_library",
    package = "mock",
)

gomock(
    name = "builder",
    out = "builder.go",
    interfaces = [
        "BuildExecutor",
        "InputRootPopulator",
        "StorageFlusher",
    ],
    library = "//pkg/builder:go_default_library",
    package = "mock",
)

gomock(
    name = "cas",
    out = "cas.go",
    interfaces = ["ContentAddressableStorage"],
    library = "@com_github_buildbarn_bb_storage//pkg/cas:go_default_library",
    package = "mock",
)

gomock(
    name = "clock",
    out = "clock.go",
    interfaces = [
        "Clock",
        "Timer",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/clock:go_default_library",
    package = "mock",
)

gomock(
    name = "environment",
    out = "environment.go",
    interfaces = [
        "Environment",
        "ManagedEnvironment",
        "Manager",
    ],
    library = "//pkg/environment:go_default_library",
    package = "mock",
)

gomock(
    name = "filesystem",
    out = "filesystem.go",
    interfaces = [
        "Directory",
        "DirectoryCloser",
        "FileReader",
        "FileReadWriter",
        "FileWriter",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/filesystem:go_default_library",
    package = "mock",
)

gomock(
    name = "filesystem_re",
    out = "filesystem_re.go",
    interfaces = ["FilePool"],
    library = "//pkg/filesystem:go_default_library",
    package = "mock",
)

gomock(
    name = "remoteexecution",
    out = "remoteexecution.go",
    interfaces = [
        "Execution_ExecuteServer",
        "Execution_WaitExecutionServer",
    ],
    library = "@com_github_bazelbuild_remote_apis//build/bazel/remote/execution/v2:go_default_library",
    package = "mock",
)

gomock(
    name = "sharding",
    out = "sharding.go",
    interfaces = [
        "ShardPermuter",
        "ShardSelector",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/blobstore/sharding:go_default_library",
    package = "mock",
)

gomock(
    name = "storage_builder",
    out = "storage_builder.go",
    interfaces = [
        "BuildQueue",
        "BuildQueueGetter",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/builder:go_default_library",
    package = "mock",
)

gomock(
    name = "storage_util",
    out = "storage_util.go",
    interfaces = ["UUIDGenerator"],
    library = "@com_github_buildbarn_bb_storage//pkg/util:go_default_library",
    package = "mock",
)

gomock(
    name = "sync",
    out = "sync.go",
    interfaces = ["InitializationFunc"],
    library = "//pkg/sync:go_default_library",
    package = "mock",
)

go_library(
    name = "go_default_library",
    srcs = [
        ":blobstore.go",
        ":builder.go",
        ":cas.go",
        ":clock.go",
        ":environment.go",
        ":filesystem.go",
        ":filesystem_re.go",
        ":remoteexecution.go",
        ":sharding.go",
        ":storage_builder.go",
        ":storage_util.go",
        ":sync.go",
    ],
    importpath = "github.com/buildbarn/bb-remote-execution/internal/mock",
    visibility = ["//:__subpackages__"],
    deps = [
        "//pkg/builder:go_default_library",
        "//pkg/environment:go_default_library",
        "//pkg/filesystem:go_default_library",
        "//pkg/proto/remoteworker:go_default_library",
        "//pkg/proto/runner:go_default_library",
        "@com_github_bazelbuild_remote_apis//build/bazel/remote/execution/v2:go_default_library",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/buffer:go_default_library",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/sharding:go_default_library",
        "@com_github_buildbarn_bb_storage//pkg/builder:go_default_library",
        "@com_github_buildbarn_bb_storage//pkg/clock:go_default_library",
        "@com_github_buildbarn_bb_storage//pkg/digest:go_default_library",
        "@com_github_buildbarn_bb_storage//pkg/filesystem:go_default_library",
        "@com_github_buildbarn_bb_storage//pkg/proto/cas:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_google_uuid//:go_default_library",
        "@go_googleapis//google/longrunning:longrunning_go_proto",
        "@org_golang_google_grpc//metadata:go_default_library",
    ],
)
